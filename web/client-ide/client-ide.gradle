plugins {
    id 'com.bmuschko.docker-remote-api'
}

evaluationDependsOn Docker.registryProject('nginx-base')

apply from: "$rootDir/gradle/web-client.gradle"

configurations {
    js
}

dependencies {
    compile project(':web-client-api')
    compile project(':open-api-lang-parser')

    js project(path: ':proto:raw-js-openapi', configuration: 'js')
}

GwtTools.gwtCompile project, 'io.deephaven.ide.DeephavenIde', 'Create a jar of javascript for web IDE'

def jsOutput = layout.buildDirectory.dir('js')
def gwtOutput = tasks.register('gwtOutput', Sync) {
    includeEmptyDirs = false
    from(tasks.getByName('gwtCompile').outputs.files) {
        // only copy the dhapi module, and don't give it a wrapper directory
//        include("extra/dhapi/symbolMaps/*.json").rename('extra/dhapi/symbolMaps/[A-Z0-9]+_sourceMap0\\.json', 'dhapi/dh-core.js.map')
        include 'dhapi/**'
        logger.warn('Hello! Copinyg...');
        eachFile {
            logger.warn('Renaming ' + it.path);
            it.path = 'jsapi/' + it.path.substring('dhapi/'.length())
        }
    }
//    from(tasks.getByName('gwtCompile').outputs.files) {
//        include("dhapi/extra/symbolMaps/*.json").rename('dhapi/extra/symbolMaps/[A-Z0-9]+_sourceMap0\\.json', 'dhapi/dh-core.js.map')
//        eachFile { it.path = 'jsapi/' + it.path.substring('dhapi/'.length()) }
//    }
    into jsOutput
}

artifacts {
    js(jsOutput) {
        builtBy gwtOutput
    }
}
